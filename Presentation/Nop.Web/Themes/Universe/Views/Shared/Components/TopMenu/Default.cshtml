@model TopMenuModel
@using Nop.Web.Models.Catalog;
@{
    var isRtl = this.ShouldUseRtlTheme();
}
<input type="hidden" value="@isRtl.ToString().ToLowerInvariant()" id="isRtlEnabled" />

<ul class="top-menu">

    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMenuBefore })
    <li class="hidden-lg hidden-md hidden-sm"><a href="/search">@T("Search.SearchBox.Tooltip")</a></li>
    <li class="hidden-lg hidden-md hidden-sm"><a href="@Url.RouteUrl("ShoppingCart")">@T("account.shoppingcart")</a></li>
    @if (Model.IsAuthenticated)
    {
        <li class="hidden-lg hidden-md hidden-sm">
            <a href="@Url.RouteUrl("CustomerInfo")" @*class="ico-register tagAHover" *@>@*<i class="fas fa-user"></i>*@ @T("Account.MyAccount") </a>
        </li>
        <li class="hidden-lg hidden-md hidden-sm">
            <a href="@Url.RouteUrl("Logout")" @*class="ico-logout tagAHover" *@>@*<i class="fas fa-sign-out-alt"></i>*@  @T("Account.Logout")</a>
        </li>
    }
    else
    {
        <li class="hidden-lg hidden-md hidden-sm">
            <a href="@Url.RouteUrl("Register")" @*class="ico-register tagAHover" *@>@T("Account.Register")</a>
        </li>
        <li class="hidden-lg hidden-md hidden-sm">
            <a href="@Url.RouteUrl("Login")" @*class="ico-login tagAHover" *@>@T("Account.Login")</a>
        </li>
    }
    @if (Model.DisplayHomePageMenuItem)
    {
        <li><a href="@Url.RouteUrl("HomePage")">@T("HomePage")</a></li>
    }
    @{
        var rootCategories = Model.Categories.Where(x => x.IncludeInTopMenu).ToList();
    }
    @foreach (var category in rootCategories)
    {
        var categoryLineModel = new TopMenuModel.CategoryLineModel
        {
            Category = category
        };
        @await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
    }
    @foreach (var topic in Model.Topics)
    {
        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
    }
    @if (Model.NewProductsEnabled && Model.DisplayNewProductsMenuItem)
    {
        <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
    }
    @if (Model.DisplayProductSearchMenuItem)
    {
        <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a></li>
    }
    @if (Model.DisplayCustomerInfoMenuItem)
    {
        <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
    }
    @if (Model.BlogEnabled && Model.DisplayBlogMenuItem)
    {
        <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
    }
    @if (Model.ForumEnabled && Model.DisplayForumsMenuItem)
    {
        <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
    }
    @if (Model.DisplayContactUsMenuItem)
    {
        <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMenuAfter })
</ul>
@*<ul>
        <li class="search-box1 hidden-xs">
            @await Component.InvokeAsync("SearchBox")
        </li>
        <li class="hidden-xs login-box-man">
            @await Component.InvokeAsync("HeaderLinks")
        </li>
        <li class="hidden-xs hover-mini-cart">
            @await Component.InvokeAsync("FlyoutShoppingCart")
        </li>
    </ul>*@


<script asp-location="Footer">

    (function ($, ssCore) {
        $(document).ready(function () {
            ssCore.prepareTopMenu();
        });

        $(document).on('themeBreakpointPassed7Spikes', function (e) {
            if (!e.isInitialLoad && !window.sevenSpikesTheme) {
                ssCore.prepareTopMenu();
            }
        });

    })(jQuery, sevenSpikesCore);

</script>